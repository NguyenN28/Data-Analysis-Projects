Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	select count(*) from table
i. Attribute table = 10000 
ii. Business table = 10000 
iii. Category table = 10000 
iv. Checkin table = 10000 
v. elite_years table = 10000 
vi. friend table = 10000 
vii. hours table = 10000 
viii. photo table = 10000 
ix. review table = 10000 
x. tip table = 10000 
xi. user table = 10000 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.
      
i. Business = 10000       (primary key = id)
ii. Hours = 1562          (foreign key = business_id)
iii. Category = 2643      (foreign key = business_id)
iv. Attribute = 1115      (foreign key = business_id)
v. Review = 10000, 8090, 9581    (primary key = id, foreign key = business_id, user_id)
vi. Checkin = 493         (foreign key = business_id)
vii. Photo = 10000, 6493  (primary key = id, foreign key = business_id)
viii. Tip = 537, 3979     (foreign key = user_id, business_id)
ix. User = 10000          (primary key = id)
x. Friend = 11            (foreign key = user_id)
xi. Elite_years = 2780    (foreign key = user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	
i. select count(distinct(id)) from business 
ii. select count(distinct(business_id)) from hours
iii. select count(distinct(business_id)) from category
iv. select count(distinct(business_id)) from attribute
v. select count(distinct(id)), count(distinct(business_id)), count(distinct(user_id)) from review
vi. select count(distinct(business_id)) from checkin
vii. select count(distinct(id)), count(distinct(business_id)) from photo
viii. select count(distinct(user_id)), count(distinct(business_id)) from tip
ix. select count(distinct(id)) from user
x. select count(distinct(user_id)) from friend
xi. select count(distinct(user_id)) from elite_years


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
select count(*) from user
where id is NULL OR 
      name is NULL OR 
      review_count IS NULL OR 
      yelping_since IS NULL OR			  
      useful IS NULL OR 
      funny IS NULL OR 
      cool IS NULL OR 
      fans IS NULL OR 
      average_stars IS NULL OR 
      compliment_hot IS NULL OR 
      compliment_more IS NULL OR 
      compliment_profile IS NULL OR 
      compliment_cute IS NULL OR 
      compliment_list IS NULL OR 
      compliment_note IS NULL OR 
      compliment_plain IS NULL OR 
      compliment_cool IS NULL OR 
      compliment_funny IS NULL OR 
      compliment_writer IS NULL OR 
      compliment_photos IS NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:  1		max:  5 	avg: 3.7082 
	select min(stars), max(stars), avg(stars) from review	
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549 
	select min(stars), max(stars), avg(stars) from business	
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2 		avg: 0.0144 
	select min(likes), max(likes), avg(likes) from tip	
	
	iv. Table: Checkin, Column: Count
	
		min:  1		max: 53 	avg:1.9414
	select min(count), max(count), avg(count) from checkin	
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995 
	select min(Review_count), max(Review_count), avg(Review_count) from user	


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
select city, sum(Review_count) as review
from business
group by city
order by review Desc
	
	Copy and Paste the Result Below:
+-----------------+--------+
| city            | review |
+-----------------+--------+
| Las Vegas       |  82854 |
| Phoenix         |  34503 |
| Toronto         |  24113 |
| Scottsdale      |  20614 |
| Charlotte       |  12523 |
| Henderson       |  10871 |
| Tempe           |  10504 |
| Pittsburgh      |   9798 |
| Montréal        |   9448 |
| Chandler        |   8112 |
| Mesa            |   6875 |
| Gilbert         |   6380 |
| Cleveland       |   5593 |
| Madison         |   5265 |
| Glendale        |   4406 |
| Mississauga     |   3814 |
| Edinburgh       |   2792 |
| Peoria          |   2624 |
| North Las Vegas |   2438 |
| Markham         |   2352 |
| Champaign       |   2029 |
| Stuttgart       |   1849 |
| Surprise        |   1520 |
| Lakewood        |   1465 |
| Goodyear        |   1155 |
+-----------------+--------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars, sum(review_count)
from business
where city = 'Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+

ii. Beachwood

SQL code used to arrive at answer:
select stars, sum(review_count)
from business
where city = 'Beachwood'
group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+		

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select id, name, review_count 
from user
order by review_count desc
limit 3
		
	Copy and Paste the Result Below:
+------------------------+------------------+--------------+
| id                     | name             | review_count |
+------------------------+------------------+--------------+
| 2weQS-RnoOBhb1KsHKyoSQ | The Buffet       |         3873 |
| 0W4lkclzZThpx3V65bVgig | Schwartz's       |         1757 |
| 0FUtlsQrJI7LhqDPxLumEw | Joe's Farm Grill |         1549 |
+------------------------+------------------+--------------+		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
No, posing more reviews don't correlate with more fans.

Code:
select id, name, review_count, fans, yelping_since
from user
order by fans desc

+------------------------+-----------+--------------+------+---------------------+
| id                     | name      | review_count | fans | yelping_since       |
+------------------------+-----------+--------------+------+---------------------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 | 2007-07-19 00:00:00 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 | 2011-03-30 00:00:00 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 | 2012-11-27 00:00:00 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 | 2009-07-08 00:00:00 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 | 2009-10-05 00:00:00 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 | 2009-02-05 00:00:00 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 | 2015-02-19 00:00:00 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 | 2012-04-05 00:00:00 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 | 2007-08-14 00:00:00 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 | 2009-05-31 00:00:00 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 | 2007-08-29 00:00:00 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 | 2010-10-01 00:00:00 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 | 2007-03-10 00:00:00 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 | 2005-08-07 00:00:00 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 | 2012-10-08 00:00:00 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 | 2009-01-12 00:00:00 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 | 2008-02-16 00:00:00 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 | 2013-07-08 00:00:00 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 | 2009-09-07 00:00:00 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 | 2009-04-30 00:00:00 |
+------------------------+-----------+--------------+------+---------------------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more "love" word than "hate" word in reviews

	SQL code used to arrive at answer:
select count(*) as hatecount from review
where text like '%hate%'

+-----------+
| hatecount |
+-----------+
|       232 |
+-----------+
	
select count(*) as lovecount from review
where text like '%love%' 
	
+-----------+
| lovecount |
+-----------+
|      1780 |
+-----------+	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select id, name, fans
from user
order by fans desc
limit 10	
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   Yes, they have different distribution of hours. For instance, group 4-5 stars on Wednesday has distributed hours from 18:00-2:00 shorter than group 2-3 stars on the same day with hours between 8:00-22:00

ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes, they have different number of reviews, apparently group 4-5 stars has more reviews than the group 2-3 stars.     
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
     No, because they have different postal code.

SQL code used for analysis:
 
+-----------+-------------+--------------+-----------------------+--------------+-----------------+
| rating    | postal_code | review_count | hours                 | name         | neighborhood    |
+-----------+-------------+--------------+-----------------------+--------------+-----------------+
| 4-5 Stars | M6P 1A6     |           26 | Wednesday|18:00-2:00  | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Tuesday|18:00-2:00    | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Thursday|18:00-2:00   | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Sunday|16:00-2:00     | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Saturday|16:00-2:00   | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Monday|16:00-2:00     | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Friday|18:00-2:00     | Cabin Fever  | High Park       |
| 4-5 Stars | M6H 1V5     |           15 | Wednesday|15:00-21:00 | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Tuesday|15:00-21:00   | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Thursday|15:00-21:00  | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Sunday|11:00-21:00    | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Saturday|11:00-21:00  | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Friday|15:00-21:00    | Halo Brewery | Wallace Emerson |
| 2-3 Stars | M6R 1X3     |           10 | Wednesday|8:00-22:00  | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Tuesday|8:00-22:00    | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Thursday|8:00-22:00   | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Sunday|8:00-22:00     | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Saturday|8:00-22:00   | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Monday|8:00-22:00     | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Friday|8:00-22:00     | Loblaws      | Roncesvalles    |
+-----------+-------------+--------------+-----------------------+--------------+-----------------+
	
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    the business are open have more reviews than the ones are closed
     Open: average review = 31.76 |  total review = 269300 
     Close: average review = 23.2 |  total review = 35261     
ii. Difference 2:
    the business are open have better rating than the ones are closed     
    Open:  3.68     
    Close: 3.52     
SQL code used for analysis:

select
	count(distinct(id)) as No_of_business,
	round(avg(review_count),2) as avg_review,
	sum(review_count) as total_review,
	round(avg(stars),2) as avg_rating,
	is_open
from business
group by is_open	
	
+----------------+------------+--------------+------------+---------+
| No_of_business | avg_review | total_review | avg_rating | is_open |
+----------------+------------+--------------+------------+---------+
|           1520 |       23.2 |        35261 |       3.52 |       0 |
|           8480 |      31.76 |       269300 |       3.68 |       1 |
+----------------+------------+--------------+------------+---------+

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   The analysis is finding the the cities have top-rated restaurants and most reviews contributed as they are opening or closing       
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data: 
    I join the businesses table with category table to get the data for classifying the locations that have Restaurants category influenced by ratings and reviews and the open status of business also considered.                            
                 
iii. Output of your finished dataset:
         
+----------------+-----------+---------------+---------+
| city           | avg_stars | total_reviews | is_open |
+----------------+-----------+---------------+---------+
| Mesa           |       4.5 |           396 |       1 |
| Charlotte      |      4.25 |            11 |       0 |
| Cleveland      |       4.0 |           423 |       0 |
| Westlake       |       4.0 |           105 |       1 |
| Medina         |       4.0 |            94 |       1 |
| Scottsdale     |       4.0 |            91 |       0 |
| Cuyahoga Falls |       4.0 |            55 |       1 |
| Oakville       |       4.0 |            55 |       1 |
| Middleton      |       4.0 |            37 |       1 |
| Chesterland    |       4.0 |            30 |       1 |
| Tolleson       |       4.0 |            23 |       1 |
| Brampton       |       4.0 |            10 |       1 |
| Madison        |       4.0 |             4 |       0 |
| Las Vegas      |      3.88 |          1062 |       0 |
+----------------+-----------+---------------+---------+ 
     
iv. Provide the SQL code you used to create your final dataset:

SELECT  city, 
        round(avg(stars),2) AS avg_stars,
        sum(review_count) as total_reviews,
        is_open
FROM business
inner JOIN category ON business.id = category.business_id
where category like 'Restaurants'
group by city having avg_stars > 3.5
ORDER BY avg_stars desc, total_reviews desc
